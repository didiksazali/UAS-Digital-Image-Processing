unit F_Menu;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, ExtDlgs;

type
  TFMenu = class(TForm)
    Panel1: TPanel;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Edit1: TEdit;
    Edit2: TEdit;
    OpenPictureDialog1: TOpenPictureDialog;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Edit1Change(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
  private
    { Private declarations }

  Procedure rotate;
//  Procedure flip_X;
  Procedure blend;

  public
    { Public declarations }
  end;

var
  FMenu: TFMenu;

implementation

uses U_Citra1, U_Citra2, U_Hasil, U_Hasil2, U_Hasil3;

{$R *.dfm}

procedure TFMenu.Button1Click(Sender: TObject);
begin
  if OpenPictureDialog1.Execute then
    begin
      if F_Citra1=nil then
        Application.CreateForm(TF_Citra1, F_Citra1);

        with F_Citra1 do
          begin
            Image1.Picture.LoadFromFile(OpenPictureDialog1.FileName);
            ClientHeight := image1.Picture.Height;
            ClientWidth := image1.Picture.Width;
          end;

    end;
end;

procedure TFMenu.Button2Click(Sender: TObject);
begin
if OpenPictureDialog1.Execute then
    begin
      if F_Citra2=nil then
        Application.CreateForm(TF_Citra2, F_Citra2);

        with F_Citra2 do
          begin
            Image1.Picture.LoadFromFile(OpenPictureDialog1.FileName);
            ClientHeight := image1.Picture.Height;
            ClientWidth := image1.Picture.Width;
            F_Citra2.Left := F_Citra1.Left+F_Citra1.Width;
            F_Citra2.Top := F_Citra1.Top;
          end;

    end;
end;

procedure TFMenu.Button3Click(Sender: TObject);
begin
  Application.CreateForm(TF_Rotate, F_Blending);
  F_Blending.Image1.Picture:=F_Rotate.Image1.Picture;
  F_Blending.ClientHeight:=F_Citra2.Image1.Picture.Height;
  F_Blending.ClientWidth:=F_Citra2.Image1.Picture.Width;
  F_Blending.Top:=F_Rotate.Top;
  F_Blending.Left:=F_Rotate.Left+F_Rotate.Width;
  blend;
end;

procedure TFMenu.Button4Click(Sender: TObject);
begin
Application.CreateForm(TF_Citra1,F_Rotate);
F_Rotate.Image1.Picture:=F_Citra1.Image1.Picture;
F_Rotate.Top:=F_Citra2.Top;
F_Rotate.Left:=F_Citra2.Left+F_Citra2.Width;
F_Rotate.Caption:='Citra Hasil Rotasi';
rotate;
F_Rotate.ClientHeight:=F_Citra1.Image1.Width;
F_Rotate.ClientWidth:=F_Citra1.Image1.Height;

end;

procedure TFMenu.Button5Click(Sender: TObject);
begin
//Application.CreateForm(TF_Citra1, F_Hasil3);
//F_Hasil3.Image1.Picture:=F_Citra1.Image1.Picture;
//F_Hasil3.ClientHeight:=F_Hasil3.Image1.Picture.Height;
//F_Hasil3.ClientWidth:=F_Hasil3.Image1.Picture.Width;
//F_Hasil3.Top:=F_Citra1.Left+F_Citra1.Width;
//
//Flip_X;

end;

procedure TFMenu.Edit1Change(Sender: TObject);
var
 wA, wB:real;
begin
  if edit1.Text<>'' then
  begin
    wA:=StrToFloat(edit1.Text);
    wB:=1-wA;
    edit2.Text:=FloatToStr(wB);
  end;

end;

procedure TFMenu.blend;
var
  i,j,batas_kolom,batas_baris : integer;
  w1,w2:real;
  PC,PC2,PH:PByteArray;
begin
  w1:=StrToFloat(edit1.Text);
  w2:=1-w1;

  if (F_Citra2.Image1.Picture.Height > F_Blending.Image1.Picture.Height) then
    batas_baris:=F_Blending.Image1.Picture.Height
  else
    batas_baris:=F_Citra2.Image1.Picture.Bitmap.Height;

  for i := 0 to batas_baris - 1 do
    begin
      PC:=F_Blending.Image1.Picture.Bitmap.ScanLine[i];
      PC2:=F_Citra2.Image1.Picture.Bitmap.ScanLine[i];
      PH:=F_Rotate.Image1.Picture.Bitmap.ScanLine[i];

        if (F_Citra2.Image1.Picture.Width > F_Blending.Image1.Picture.Width) then
          batas_kolom:=F_Blending.Image1.Picture.Width
        else
          batas_kolom:=F_Citra2.Image1.Picture.Width;

        for j := 0 to batas_kolom - 1 do
          begin
             PH[3*j]:=Round(PC[3*j]*w1+PC2[3*j]*w2);
             PH[3*j+1]:=Round(PC[3*j+1]*w1+PC2[3*j+1]*w2);
             PH[3*j+2]:=Round(PC[3*j+2]*w1+PC2[3*j+2]*w2);
          end;

    end;

end;

procedure TFMenu.rotate;
var
  x,y,x1,y1,w,h,w1,h1:integer;
  PC,PH:PByteArray;
  Ri,Gi,Bi,Ko,Ro,Bo,Go:array of array of byte;

  begin
       w:=F_Citra1.Image1.Picture.Width;
       h:=F_Citra1.Image1.Picture.Height;
       w1:=h;
       h1:=w;
       F_Rotate.Image1.Picture.Bitmap.Width:=w1;
       F_Rotate.Image1.Picture.Bitmap.Height:=h1;

       SetLength(Ri,w,h);
       SetLength(Gi,w,h);
       SetLength(Bi,w,h);
       SetLength(Ro,w1,h1);
       SetLength(Go,w1,h1);
       SetLength(Bo,w1,h1);

       for Y := 0 to H - 1 do
         begin
           PC:=F_Citra1.Image1.Picture.Bitmap.ScanLine[y];
           for x := 0 to w - 1 do
             begin
               Bi[x,y]:=PC[3*x];
               Gi[x,y]:=PC[3*x+1];
               Ri[x,y]:=PC[3*x+2];

             end;
         end;

         for x1 := 0 to w1 - 1 do
         begin
           for y1 := 0 to h1 - 1 do
             begin
               x:=y1;
               y:=(w1-1)-x1;
               Ro[x1,y1]:=Ri[x,y];
               Go[x1,y1]:=Gi[x,y];
               Bo[x1,y1]:=Bi[x,y];

             end;
         end;

         for y1 := 0 to h1 - 1 do
         begin
          PH:=F_Rotate.Image1.Picture.Bitmap.ScanLine[y1];
           for x1 := 0 to w1 - 1 do
             begin
               PH[3*x1]:=Bo[x1,y1];
               PH[3*x1+1]:=Go[x1,y1];
               PH[3*x1+2]:=Ro[x1,y1];

             end;
         end;

         Ri:=nil;
         Gi:=nil;
         Bi:=nil;
         Ro:=nil;
         Go:=nil;
         Bo:=nil;

  end;

  
end.
